name: Tests
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - "*"

jobs:
  test:
    name: Test Julia ${{ matrix.jlversion }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        jlversion:
          - "1"
          - "1.9"
          - "nightly"
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        pyversion: [3.9]
        arch:
          - x64

    steps:
      - uses: actions/checkout@v4

      # Python Tasks
      - name: Setup ${{ matrix.os }}, python ${{ matrix.pyversion }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyversion }}

      - name: Display Python Version
        run: python -c "import sys; print(sys.version)"

      # Julia Tasks
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.jlversion }}
          arch: ${{ matrix.arch }}

      #      - name: Use julia-actions cache
      #        uses: julia-actions/cache@v2

      - name: Build package
        uses: julia-actions/julia-buildpkg@v1

      - name: Run tests
        uses: julia-actions/julia-runtest@v1
        env:
          #JULIA_DEBUG: PythonCall
          JULIA_NUM_THREADS: "8"

      - name: Process coverage
        uses: julia-actions/julia-processcoverage@v1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  docs:
    if: ${{ !(github.event_name == 'pull_request') || contains(github.event.pull_request.labels.*.name, 'documentation') }}
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: "1"
        env:
          PYTHON: ""
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using AutoMLPipeline
            doctest(AutoMLPipeline)' # change MYPACKAGE to the name of your package
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
